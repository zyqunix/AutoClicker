name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: AutoClicker.sln
      Test_Project_Path: AutoClicker\Autoclicker.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Build the application
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Sign the application
      run: |
        & "C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Current\Bin\MSBuild.exe" $env:Solution_Name /t:Sign /p:Configuration=$env:Configuration /p:SignToolPath="C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\SignTool.exe" /p:SignToolPassword="${{ secrets.Pfx_Key }}"

    - name: Remove the pfx
      run: Remove-Item -path $env:GITHUB_WORKSPACE\GitHubActionsWorkflow.pfx

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build Artifacts
        path: |
          ${{ env.GITHUB_WORKSPACE }}\bin\${{ matrix.configuration }}\AutoClicker.exe
